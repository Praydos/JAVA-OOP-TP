
Dans ce projet, nous avons développé une application Java pour gérer les salaires des employés d'une entreprise de développement informatique, en particulier des ingénieurs et des managers. Le projet repose sur les principes de la programmation orientée objet, en utilisant l'héritage et l'abstraction pour structurer les données et le comportement des employés.

Tout d'abord, nous avons créé une classe abstraite `Employe` qui sert de base pour tous les types d'employés. Cette classe contient les attributs `nom`, `prenom`, `telephone` et `salaire`, qui sont tous privés pour garantir l'encapsulation. Deux constructeurs sont fournis : un avec paramètres pour initialiser les attributs et un sans paramètres. La classe définit également une méthode abstraite `calculerSalaire()`, qui doit être implémentée par les sous-classes pour retourner le salaire d'un employé. Des getters sont également fournis pour accéder aux attributs de l'employé. De plus, une méthode abstraite `affiche()` est incluse pour permettre l'affichage des informations de l'employé.

Ensuite, la classe `Ingenieur` a été créée pour représenter un ingénieur dans l'entreprise. Cette classe hérite de `Employe` et ajoute un attribut supplémentaire `specialite`, qui représente la spécialité de l'ingénieur. La méthode `calculerSalaire()` est redéfinie pour calculer le salaire de l'ingénieur en appliquant une augmentation de 15 % à son salaire de base. La méthode `affiche()` est également redéfinie pour afficher les informations de l'ingénieur, y compris son nom, son prénom, son téléphone, sa spécialité et son salaire après augmentation.

De même, nous avons implémenté la classe `Manager`, qui hérite également de `Employe`. Cette classe ajoute un attribut `service`, qui représente le service que le manager supervise. La méthode `calculerSalaire()` est redéfinie pour appliquer une augmentation de 20 % au salaire de base du manager. La méthode `affiche()` est aussi redéfinie pour afficher les informations du manager, y compris son nom, son prénom, son téléphone, son service et son salaire après augmentation.

Enfin, la classe principale `Main` contient une méthode `main()` qui sert de point d'entrée pour le programme. Dans cette méthode, nous déclarons et instancions un objet `Ingenieur` avec des informations pertinentes, puis appelons sa méthode `affiche()` pour afficher ses détails. Ensuite, nous instancions un objet `Manager` de manière similaire et affichons ses informations. Ce projet démontre l'utilisation efficace de l'héritage, de l'abstraction, et des méthodes polymorphiques pour créer une application de gestion des salaires, tout en respectant les principes fondamentaux de la programmation orientée objet en Java.
